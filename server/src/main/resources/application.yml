
server.port: 9100
server.servlet.context-path: /api

BASE_LOCATION: /Users/shuzx/workfolder/workgit/java_shop
DB_NAME: shop

#BASE_LOCATION: C:\Users\Administrator\Desktop\java-shop
#DB_NAME: java_shop

spring:
  datasource:
    username: root
    password: Let0109i
    url: jdbc:mysql://localhost:3306/${DB_NAME}?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource

    druid:
      # 连接池的配置信息
      initial-size: 5
      min-idle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      # 配置DruidStatViewServlet
      stat-view-servlet:
        # IP白名单(没有配置或者为空，则允许所有访问)
        allow: 127.0.0.1
        # IP黑名单 (存在共同时，deny优先于allow)
        deny: 192.168.1.73
        # 禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # druid登录的账户名
        login-username: admin
        # druid登录的密码
        login-password: 123
        # 不要写2个*号！要1个！
        url-pattern: "/druid/*"
        #这里配true才能访问监控页面！
        enabled: true

  servlet:
      multipart: 5
      max-request-size: 500MB  # 上传文件总的最大值 默认10MB
      max-file-size: 100MB #单个文件最大值 默认1MB
      location: ${BASE_LOCATION}/server/upload/tmp # 临时上传目录
      enabled: true



  # 静态资源路径
  mvc:
    static-path-pattern: /staticfiles/**  # 别名
  web:
    resources:
#      static-locations: classpath:/static
      static-locations: file:${BASE_LOCATION}/server/upload


File:
  uploadPath: ${BASE_LOCATION}/server/upload

mybatis:
  configuration:
    map-underscore-to-camel-case: true
#  table:
#    #create系统启动后，会将所有的表删除掉，然后根据model中配置的结构重新建表，该操作会破坏原有数据;
#    #update系统会自动判断哪些表是新建的．哪些字段要修改类型等，哪些字段要删除，哪些字段要新增，该操作不会破坏原有数据;
#    #add新增表/新增字段/新增索引新增唯一约束的功能，不做做修改和删除(只在版本1.0.9.RELEASE及以上支持);
#    #none系统不做任何处理;
#    auto: create
#  model:
#    #扫描用于创建表的对象的包名
#    pack: com.gk.study.entity
#  database:
#    #数据库类型目前只支持mysql
#    type: mysql
#
##mybatis-plus
#mybatis-plus:
#  #固定的
#  mapper-locations: classpath*:mapper/*/*.xml

